/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package defense_system;
import javax.swing.event.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author hp
 */
public class Helicopter extends javax.swing.JFrame implements InnerDefense_System {

    /**
     * Creates new form Helicopter
     */
    public void scroll20(){
        shootHelicopter.setEnabled(true);
    }
    public void scroll40(){
        missileHelicopter.setEnabled(true);
    }
    public void scroll60(){
        laserHelicopter.setEnabled(true);
    }
    public void scroll80(){

    }
    public void scrollBelow20(){
        laserHelicopter.setEnabled(false);
        missileHelicopter.setEnabled(false);
        shootHelicopter.setEnabled(false);
    }
    public void scrollBelow40(){
        laserHelicopter.setEnabled(false);
        missileHelicopter.setEnabled(false);
    }
    public void scrollBelow60(){
        laserHelicopter.setEnabled(false);
    }
    public void scrollBelow80(){}
    public void receiveMessageFrommain(String message){
        messageReceiveHelicopter.setText(messageReceiveHelicopter.getText().equals("")?message:"\n"+message);
    }
    public void receiveMessageFrommainHelicopter(String message){
        messageReceiveHelicopter.setText(messageReceiveHelicopter.getText().equals("")?message:"\n"+message);
    }
    public void receiveMessageFrommainSubmarine(String message){}
    public void receiveMessageFrommainTank(String message){}
    public void areaClearSend(){
        araeClearHelicopter.setText("Area Cleared");
    }
    public void areaNotClear(){
        araeClearHelicopter.setText("Area Not Cleared");
    }
    public void assignLinkToMain(MainController mainController){
        this.mainController=mainController;
    }
    public void sendInformationHelicopter(){
        int valueS = (Integer) countingSoldiersHelicopter.getValue();
        int valueA = (Integer) countingSmmoHelicopter.getValue();
        int valueF = (Integer) fuelAmount.getValue();
        int eLevel = sliderHelicopter.getValue();
        boolean position = positionHelicopter.isSelected();
        String notifyPosition = position?"In position":"Not in position";
        mainController.updateSoldierCount(valueS,valueA,valueF,eLevel,0,notifyPosition,"H");
    }
    public void sendInformationSubmarine(){}
    public void sendInformationTank(){}
    
    private MainController mainController;
    public Helicopter() {
        initComponents();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        araeClearHelicopter = new javax.swing.JLabel();
        shootHelicopter = new javax.swing.JButton();
        missileHelicopter = new javax.swing.JButton();
        laserHelicopter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageReceiveHelicopter = new javax.swing.JTextArea();
        messageTypeHelicopter = new javax.swing.JTextField();
        messageSendHelicopter = new javax.swing.JButton();
        soldierHelicopter = new javax.swing.JLabel();
        ammoHelicopter = new javax.swing.JLabel();
        countingSoldiersHelicopter = new javax.swing.JSpinner();
        countingSmmoHelicopter = new javax.swing.JSpinner();
        positionHelicopter = new javax.swing.JCheckBox();
        sliderHelicopter = new javax.swing.JSlider();
        fuelLabel = new javax.swing.JLabel();
        fuelAmount = new javax.swing.JSpinner();

        setTitle("Helicopter");
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        araeClearHelicopter.setText("Area not cleared");

        shootHelicopter.setText("Shoot");
        shootHelicopter.setEnabled(false);

        missileHelicopter.setText("Missile operation");
        missileHelicopter.setEnabled(false);

        laserHelicopter.setText("Laser operation");
        laserHelicopter.setEnabled(false);

        messageReceiveHelicopter.setColumns(20);
        messageReceiveHelicopter.setRows(5);
        jScrollPane1.setViewportView(messageReceiveHelicopter);

        messageSendHelicopter.setText("Send");

        soldierHelicopter.setText("Soldier count");

        ammoHelicopter.setText("Ammo count");

        positionHelicopter.setText("Position");

        sliderHelicopter.setMajorTickSpacing(20);
        sliderHelicopter.setMinorTickSpacing(5);
        sliderHelicopter.setOrientation(javax.swing.JSlider.VERTICAL);
        sliderHelicopter.setPaintLabels(true);
        sliderHelicopter.setPaintTicks(true);
        sliderHelicopter.setValue(100);

        fuelLabel.setText("Fuel amount");

        messageSendHelicopter.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt){
                String message = "Helicopter : "+messageTypeHelicopter.getText();
                mainController.getMessage(message);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(messageTypeHelicopter, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(messageSendHelicopter, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(positionHelicopter, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(araeClearHelicopter, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(196, 196, 196)
                                .addComponent(soldierHelicopter, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(shootHelicopter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(laserHelicopter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(missileHelicopter)
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fuelLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ammoHelicopter, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(countingSoldiersHelicopter, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                            .addComponent(countingSmmoHelicopter)
                            .addComponent(fuelAmount))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(sliderHelicopter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(araeClearHelicopter, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(soldierHelicopter)
                                .addComponent(countingSoldiersHelicopter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(shootHelicopter)
                                    .addComponent(missileHelicopter))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(laserHelicopter))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(countingSmmoHelicopter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ammoHelicopter))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fuelLabel)
                                    .addComponent(fuelAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(positionHelicopter)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(messageTypeHelicopter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(messageSendHelicopter)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(sliderHelicopter, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new Helicopter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ammoHelicopter;
    private javax.swing.JLabel araeClearHelicopter;
    private javax.swing.JSpinner countingSmmoHelicopter;
    private javax.swing.JSpinner countingSoldiersHelicopter;
    private javax.swing.JSpinner fuelAmount;
    private javax.swing.JLabel fuelLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton laserHelicopter;
    private javax.swing.JTextArea messageReceiveHelicopter;
    private javax.swing.JButton messageSendHelicopter;
    private javax.swing.JTextField messageTypeHelicopter;
    private javax.swing.JButton missileHelicopter;
    private javax.swing.JCheckBox positionHelicopter;
    private javax.swing.JButton shootHelicopter;
    private javax.swing.JSlider sliderHelicopter;
    private javax.swing.JLabel soldierHelicopter;
    // End of variables declaration//GEN-END:variables
}
