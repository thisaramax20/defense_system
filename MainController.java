/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package defense_system;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author hp
 */
public class MainController extends javax.swing.JFrame {

    /**
     * Creates new form MainController
     */
    public void sendLink(MainController mainController){
        setDefenseSystem.setMainClassLink(mainController);
    }
    public void getMessage(String message){
        messageReceiving.setText(messageReceiving.getText()==""?message:messageReceiving.getText()+"\n"+message);
    }
    public void updateSoldierCount(int countS,int countA,int countF,int levelE,int levelO,String position,String code){
        if (code.equals("H")) {
            soldierCountH = countS;
            ammoCountH = countA;
            fuelAmountH = countF;
            energyLevelH = levelE;
            totalSoldierCount.setText(Integer.toString(soldierCountH));
            totalAmmoCount.setText(Integer.toString(ammoCountH));
            totalFuelCount.setText(Integer.toString(fuelAmountH));
            jTextArea1.setText("Energy level : "+Integer.toString(energyLevelH));
            positionState.setText(position);
        }else if (code.equals("T")) {
            soldierCountT = countS;
            ammoCountT = countA;
            fuelAmountT = countF;
            energyLevelT = levelE;
            totalSoldierCount.setText(Integer.toString(soldierCountT));
            totalAmmoCount.setText(Integer.toString(ammoCountT));
            totalFuelCount.setText(Integer.toString(fuelAmountT));
            jTextArea1.setText("Energy level : "+Integer.toString(energyLevelT));
            positionState.setText(position);
        }else if (code.equals("S")) {
            soldierCountS = countS;
            ammoCountS = countA;
            fuelAmountS = countF;
            energyLevelS = levelE;
            oxygenLevelS = levelO;
            totalSoldierCount.setText(Integer.toString(soldierCountS));
            totalAmmoCount.setText(Integer.toString(ammoCountS));
            totalFuelCount.setText(Integer.toString(fuelAmountS));
            jTextArea1.setText("Energy level : "+Integer.toString(energyLevelS)+"\nOxygen level : "+Integer.toString(oxygenLevelS));
            positionState.setText(position);
        }
        
    }

    private SetDefenseSystem setDefenseSystem;
    private int soldierCountH = 0;
    private int soldierCountS = 0;
    private int soldierCountT = 0;
    private int fuelAmountH = 0;
    private int fuelAmountS = 0;
    private int fuelAmountT = 0;
    private int ammoCountH = 0;
    private int ammoCountT = 0;
    private int ammoCountS = 0;
    private int energyLevelH = 0;
    private int energyLevelS = 0;
    private int oxygenLevelS = 0;
    private int energyLevelT = 0;

    public MainController(SetDefenseSystem setDefenseSystem) {
        this.setDefenseSystem=setDefenseSystem;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        areaClearCheck = new javax.swing.JCheckBox();
        defenceSelection = new javax.swing.JComboBox<>();
        collectInformation = new javax.swing.JButton();
        soldeirLabel = new javax.swing.JLabel();
        fuelLabel = new javax.swing.JLabel();
        ammoLabel = new javax.swing.JLabel();
        positionlabel = new javax.swing.JLabel();
        mainScrollPane = new javax.swing.JSlider();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        messageTyping = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        messageReceiving = new javax.swing.JTextArea();
        privateSending = new javax.swing.JCheckBox();
        sendMessage = new javax.swing.JButton();
        totalSoldierCount = new javax.swing.JLabel();
        totalFuelCount = new javax.swing.JLabel();
        totalAmmoCount = new javax.swing.JLabel();
        positionState = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        areaClearCheck.setText("Area clear");

        defenceSelection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Defence", "Helicopter", "Submarine", "Tank" }));
        defenceSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defenceSelectionActionPerformed(evt);
            }
        });

        collectInformation.setText("Collect Information");
        collectInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collectInformationActionPerformed(evt);
                String selected = String.valueOf(defenceSelection.getSelectedItem());
                if (selected.equals("Select Defence")) {
                    totalSoldierCount.setText("");
                    totalAmmoCount.setText("");
                    totalFuelCount.setText("");
                    positionState.setText("");
                }else{
                    setDefenseSystem.collectInformation(selected);
                }
            }
        });

        mainScrollPane.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt){
                int level = mainScrollPane.getValue();
                setDefenseSystem.setLevel(level);
            }
        });

        sendMessage.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt){
                String message = messageTyping.getText();
                boolean state = privateSending.isSelected();
                if (state) {
                    String selected = String.valueOf(defenceSelection.getSelectedItem());
                    setDefenseSystem.sendMessageFromMain(message, selected);
                }else{
                    setDefenseSystem.sendMessageFromMain(message,"");
                }
                
            }
        });

        areaClearCheck.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent evt){
                int mark = evt.getStateChange();
                setDefenseSystem.areaClear(mark);
            }
        });

        soldeirLabel.setText("Soldier Count");

        fuelLabel.setText("Fuel Amount");

        ammoLabel.setText("Ammo Amount");

        positionlabel.setText("Position");

        mainScrollPane.setMajorTickSpacing(20);
        mainScrollPane.setMinorTickSpacing(5);
        mainScrollPane.setPaintLabels(true);
        mainScrollPane.setPaintTicks(true);
        mainScrollPane.setValue(0);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        messageTyping.setColumns(20);
        messageTyping.setRows(5);
        jScrollPane4.setViewportView(messageTyping);

        messageReceiving.setColumns(20);
        messageReceiving.setRows(5);
        jScrollPane5.setViewportView(messageReceiving);

        privateSending.setText("Send private");

        sendMessage.setText("Send");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(mainScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(defenceSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(totalSoldierCount, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(collectInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(totalFuelCount, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(totalAmmoCount, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(positionState, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(areaClearCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(114, 114, 114))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(sendMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(144, 144, 144))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(soldeirLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ammoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fuelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(positionlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(227, 227, 227)
                                    .addComponent(privateSending, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(96, 96, 96)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 77, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(areaClearCheck))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(defenceSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(collectInformation))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(soldeirLabel)
                            .addComponent(totalSoldierCount))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fuelLabel)
                            .addComponent(totalFuelCount))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ammoLabel)
                            .addComponent(totalAmmoCount)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(positionlabel)
                            .addComponent(positionState))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mainScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(privateSending)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendMessage)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane5))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void defenceSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defenceSelectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_defenceSelectionActionPerformed

    private void collectInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collectInformationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_collectInformationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new MainController().setVisible(true);
            }
        });

        Defense_System d1 = new Defense_System();
        d1.addObjects(new Helicopter());
        d1.addObjects(new Tank());
        d1.addObjects(new Submarine());
        MainController m1 = new MainController(d1);
        m1.sendLink(m1);
        m1.setVisible(true);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ammoLabel;
    private javax.swing.JCheckBox areaClearCheck;
    private javax.swing.JButton collectInformation;
    private javax.swing.JComboBox<String> defenceSelection;
    private javax.swing.JLabel fuelLabel;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JSlider mainScrollPane;
    private javax.swing.JTextArea messageReceiving;
    private javax.swing.JTextArea messageTyping;
    private javax.swing.JLabel positionState;
    private javax.swing.JLabel positionlabel;
    private javax.swing.JCheckBox privateSending;
    private javax.swing.JButton sendMessage;
    private javax.swing.JLabel soldeirLabel;
    private javax.swing.JLabel totalAmmoCount;
    private javax.swing.JLabel totalFuelCount;
    private javax.swing.JLabel totalSoldierCount;
    // End of variables declaration//GEN-END:variables
}
